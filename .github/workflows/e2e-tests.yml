name: End to End Tests
on:
  workflow_dispatch:
  # push:
  #   branches: [main]

env:
  API_SECRET: supersecretstring
  MONGO_URL: mongodb://127.0.0.1:27019/test
  PG_HOST: 127.0.0.1
  PG_NAME: postgres
  PG_PASSWORD: postgres
  PG_PORT: 5434
  PG_USER: postgres
  API_PORT: 4000
  NODE_ENV: test
  NEXT_PUBLIC_API_URL: http://127.0.0.1:4000
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  test-e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: üèó Setup docker compose
        uses: ./.github/actions/docker-compose

      - name: üèó Start database containers
        run: docker-compose -f docker-compose.test.yml up -d

      - name: üèó Setup monorepo
        uses: ./.github/actions/setup-monorepo

      - name: üèó Store playwright version
        run: echo "PLAYWRIGHT_VERSION=$(grep -oP '/@playwright/test/\K[0-9.]+(?=:)' ./pnpm-lock.yaml)" >> $GITHUB_ENV

      - name: ‚ôªÔ∏è Restore playwright binaries cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}

      - name: üì¶ Install playwright browsers
        run: pnpx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: üß™ Run e2e tests
        run: NODE_ENV=test pnpm db:migrate && pnpm run test:e2e --trace on

      - name: Generate playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: packages/web-tests/playwright-report/
          retention-days: 30
